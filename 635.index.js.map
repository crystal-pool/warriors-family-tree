{"version":3,"file":"635.index.js","mappings":"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","sources":["webpack://warriors-family-tree/./src/appContainer/appFull.tsx","webpack://warriors-family-tree/./src/appContainer/routes.tsx"],"sourcesContent":["import { AppBar, CssBaseline, Divider, Drawer, Hidden, IconButton, Link, makeStyles, SwipeableDrawer, Toolbar, Typography, useTheme } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles\";\nimport * as Icons from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { AppActionsList, EnvironmentInfoList } from \"../components/DrawerActions\";\nimport { EntitySearchBox } from \"../components/EntitySearchBox\";\nimport { LanguageSwitch } from \"../components/LanguageSwitch\";\nimport { LanguageContext } from \"../localization/react\";\nimport { InitializationScreen, routePathBuilders } from \"../pages\";\nimport { buildFeatureAnchorProps, buildUiScopeProps } from \"../utility/featureUsage\";\nimport { RoutesAfterInitialization } from \"./routes\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"md\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerContent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\"\n    },\n    drawerSpacing: {\n        flexGrow: 1,\n        minHeight: \"1em\"\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up(\"md\")]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"md\")]: {\n            display: \"none\",\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    title: {\n        flexGrow: 1,\n        display: \"none\",\n        color: \"inherit\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        }\n    },\n    farItems: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            flexGrow: 0\n        }\n    },\n    languageSwitchButtonText: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        }\n    },\n    searchBoxRoot: {\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        marginRight: theme.spacing(2),\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(1),\n            width: \"auto\",\n        },\n    },\n    searchBoxInput: {\n        transition: theme.transitions.create(\"width\"),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 160,\n            \"&:focus\": {\n                width: 180,\n            },\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300,\n            },\n        },\n        [theme.breakpoints.up(\"lg\")]: {\n            \"&:focus\": {\n                width: 400,\n            },\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        minWidth: 0\n    },\n}));\n\nexport const AppFull: React.FC = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const languageContext = React.useContext(LanguageContext);\n\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen);\n    }\n\n    const drawer = (\n        <div className={classes.drawerContent} {...buildUiScopeProps(\"drawer\")}>\n            <div className={classes.toolbar} />\n            <Divider />\n            <AppActionsList />\n            <Divider />\n            <div className={classes.drawerSpacing} />\n            <EnvironmentInfoList />\n        </div>\n    );\n\n    return (\n        <div className={classes.root} {...buildUiScopeProps(\"app\")}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar {...buildUiScopeProps(\"toolbar\")}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                        {...buildFeatureAnchorProps(\"app.toggleDrawer\")}\n                    >\n                        <Icons.Menu />\n                    </IconButton>\n                    <Link\n                        href={routePathBuilders.welcome()}\n                        className={classes.title}\n                        {...buildFeatureAnchorProps(\"navigation.home\")}\n\n                    >\n                        <Typography variant=\"h6\" noWrap>Warriors Family Tree</Typography>\n                    </Link>\n                    <div className={classes.farItems}>\n                        <EntitySearchBox classes={{\n                            root: classes.searchBoxRoot,\n                            inputInput: classes.searchBoxInput\n                        }}\n                            onAccept={(qName) => {\n                                location.href = routePathBuilders.entityProfile({ qName });\n                            }}\n                        />\n                        <LanguageSwitch classes={{ buttonText: classes.languageSwitchButtonText }}\n                            language={languageContext.language} onLanguageChanged={languageContext.setLanguage} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"siderbar actions\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden mdUp>\n                    <SwipeableDrawer\n                        container={undefined}\n                        variant=\"temporary\"\n                        anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                        open={mobileOpen}\n                        onOpen={handleDrawerToggle}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                        {...buildUiScopeProps(\"app/toolbar/popupDrawer\")}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden smDown>\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <React.Suspense fallback={<InitializationScreen />}>\n                    <RoutesAfterInitialization />\n                </React.Suspense>\n            </main>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport { dataService } from \"../services\";\n\nexport interface IRoutesProps {\n    embed?: boolean;\n}\n\nconst AppRoutesAsync: Promise<React.FC<IRoutesProps>> = (async () => {\n    const Pages = await import(\"../pages\");\n    return () => {\n        return (<Routes>\n            <Route path={Pages.routePaths.welcome} element={<Pages.Welcome />} />\n            <Route path={Pages.routePaths.familyTree} element={<Pages.FamilyTree />} />\n            <Route path={Pages.routePaths.entityProfile} element={<Pages.EntityProfile />} />\n        </Routes>);\n    };\n})();\n\nexport const RoutesAfterInitialization = React.lazy(async () => {\n    await dataService.initialization;\n    return { default: await AppRoutesAsync };\n});\n"],"names":["drawerWidth","useStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","drawerContent","flexDirection","height","drawerSpacing","flexGrow","minHeight","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","title","color","farItems","alignItems","languageSwitchButtonText","down","searchBoxRoot","borderRadius","shape","backgroundColor","palette","common","white","searchBoxInput","transition","transitions","create","drawerPaper","content","padding","minWidth","AppFull","props","classes","mobileOpen","setMobileOpen","languageContext","handleDrawerToggle","className","position","edge","onClick","href","routePathBuilders","variant","noWrap","inputInput","onAccept","qName","location","buttonText","language","onLanguageChanged","setLanguage","mdUp","container","undefined","anchor","direction","open","onOpen","onClose","paper","ModalProps","keepMounted","smDown","fallback","InitializationScreen","AppRoutesAsync","Pages","path","routePaths","welcome","element","Welcome","familyTree","FamilyTree","entityProfile","EntityProfile","RoutesAfterInitialization","async","default"],"sourceRoot":""}