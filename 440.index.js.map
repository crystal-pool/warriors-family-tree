{"version":3,"file":"440.index.js","mappings":"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","sources":["webpack://warriors-family-tree/./node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","webpack://warriors-family-tree/./src/utility/embedInterop.ts","webpack://warriors-family-tree/./src/appContainer/appEmbed.tsx","webpack://warriors-family-tree/./src/appContainer/routes.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import { SeverityLevel } from \"@microsoft/applicationinsights-web\";\nimport { ResizeObserver } from \"resize-observer\";\nimport { ICancellationToken, PromiseLikeResolutionSource } from \"tasklike-promise-library\";\nimport { EmbedMessage, HostMessage, IHostSettings } from \"../../shared/messages\";\nimport { appInsights } from \"./telemetry\";\n\nexport function isOwnerWindowPresent(): boolean {\n    return !!getOwnerWindow();\n}\n\nexport function getOwnerWindow(): Window | undefined {\n    if (window.parent !== window) return window.parent;\n    if (window.opener instanceof Window) return window.opener;\n    return undefined;\n}\n\nlet currentToken: string | undefined;\n\nexport function postInteropMessage(message: EmbedMessage): boolean {\n    const owner = getOwnerWindow();\n    if (!owner) return false;\n    if (!currentToken) return false;\n    message.token = currentToken;\n    owner.postMessage(message, \"*\");\n    return true;\n}\n\nlet readyPosted = false;\n\nexport function waitMessage<T extends HostMessage>(type: T[\"type\"], cancellationToken?: ICancellationToken): PromiseLike<T> {\n    const plrs = new PromiseLikeResolutionSource<T>();\n    const cts = cancellationToken && cancellationToken.subscribe(() => {\n        window.removeEventListener(\"message\", handler);\n        plrs.tryCancel();\n    });\n    function handler(e: MessageEvent) {\n        if (e.data && typeof e.data === \"object\" && e.data.token === currentToken && e.data.type === type) {\n            try {\n                plrs.tryResolve(e.data);\n            } finally {\n                cts && cts.dispose();\n                window.removeEventListener(\"message\", handler);\n            }\n        }\n    }\n    window.addEventListener(\"message\", handler);\n    return plrs.promiseLike;\n}\n\nlet documentHeightObserver: ResizeObserver | undefined;\n\nexport let hostSettings: IHostSettings | undefined;\n\nexport async function postReadyMessage(token: string): Promise<void> {\n    if (readyPosted) throw new Error(\"ready message has already been posted\");\n    currentToken = token;\n    appInsights.trackEvent({\n        name: \"postReadyMessage.embedReady\",\n        properties: { token }\n    });\n    if (!postInteropMessage({\n        type: \"ready\",\n        revision: environment.commitId,\n        buildTimestamp: environment.buildTimestamp\n    })) {\n        appInsights.trackTrace({ message: \"postReadyMessage: postInteropMessage failed.\", severityLevel: SeverityLevel.Warning });\n        return;\n    }\n    readyPosted = true;\n    const message = await waitMessage(\"initialize\");\n    appInsights.trackEvent({\n        name: \"postReadyMessage.hostInitialize\",\n        properties: { message }\n    });\n    hostSettings = message.settings || {};\n    if (hostSettings.observeDocumentHeight) {\n        observeDocumentHeight();\n    }\n    document.body.classList.add(\"embed\");\n    if (!hostSettings.scrollable) {\n        document.body.classList.add(\"noscroll\");\n    }\n}\n\nfunction observeDocumentHeight(): void {\n    if (documentHeightObserver) return;\n    let currentHeight = 0;\n    documentHeightObserver = new window.ResizeObserver(() => {\n        const h = document.documentElement.offsetHeight;\n        if (h !== currentHeight) {\n            postInteropMessage({ type: \"documentHeightChanged\", height: h });\n            currentHeight = h;\n        }\n    });\n    documentHeightObserver.observe(document.documentElement);\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { InitializationScreen } from \"../pages\";\nimport { isOwnerWindowPresent, postReadyMessage } from \"../utility/embedInterop\";\nimport { buildUiScopeProps } from \"../utility/featureUsage\";\nimport { appInsights } from \"../utility/telemetry\";\nimport { RoutesAfterInitialization } from \"./routes\";\n\nexport interface IAppEmbedProps {\n    postMessageToken?: string;\n}\n\nexport const AppEmbed: React.FC<IAppEmbedProps> = (props) => {\n    React.useEffect(() => {\n        const ownerPresent = isOwnerWindowPresent();\n        if (ownerPresent && props.postMessageToken) {\n            // tslint:disable-next-line: no-floating-promises\n            postReadyMessage(props.postMessageToken);\n        } else {\n            appInsights.trackTrace({ message: \"Not posting embed ready message.\", properties: { ownerPresent, postMessageToken: props.postMessageToken } });\n        }\n    }, []);\n    return (\n        <main {...buildUiScopeProps(\"app:embed\")}>\n            <CssBaseline />\n            <React.Suspense fallback={<InitializationScreen />}>\n                <RoutesAfterInitialization embed />\n            </React.Suspense>\n        </main>\n    );\n};\n","import * as React from \"react\";\nimport { Route, Routes } from \"react-router\";\nimport { dataService } from \"../services\";\n\nexport interface IRoutesProps {\n    embed?: boolean;\n}\n\nconst AppRoutesAsync: Promise<React.FC<IRoutesProps>> = (async () => {\n    const Pages = await import(\"../pages\");\n    return () => {\n        return (<Routes>\n            <Route path={Pages.routePaths.welcome} element={<Pages.Welcome />} />\n            <Route path={Pages.routePaths.familyTree} element={<Pages.FamilyTree />} />\n            <Route path={Pages.routePaths.entityProfile} element={<Pages.EntityProfile />} />\n        </Routes>);\n    };\n})();\n\nexport const RoutesAfterInitialization = React.lazy(async () => {\n    await dataService.initialization;\n    return { default: await AppRoutesAsync };\n});\n"],"names":["html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","fontWeight","fontWeightBold","margin","name","props","_props$children","children","classes","getOwnerWindow","window","parent","opener","Window","currentToken","postInteropMessage","message","owner","token","postMessage","documentHeightObserver","hostSettings","readyPosted","async","postReadyMessage","Error","properties","type","revision","buildTimestamp","severityLevel","SeverityLevel","cancellationToken","plrs","cts","subscribe","removeEventListener","handler","tryCancel","e","data","tryResolve","dispose","addEventListener","promiseLike","waitMessage","settings","observeDocumentHeight","currentHeight","ResizeObserver","h","document","documentElement","offsetHeight","height","observe","classList","add","scrollable","AppEmbed","ownerPresent","postMessageToken","CssBaseline","fallback","InitializationScreen","embed","AppRoutesAsync","Pages","path","routePaths","welcome","element","Welcome","familyTree","FamilyTree","entityProfile","EntityProfile","RoutesAfterInitialization"],"sourceRoot":""}